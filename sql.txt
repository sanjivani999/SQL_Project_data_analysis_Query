Q1).Who is the senior most employee based on job title?

-->
select from employee
ORDER BY Levels desc
5 Limit 1


Q2: Which countries have the most Invoices?
-->
select COUNT(*) as c, billing_country 
from invoice
group by billing_country
order by c desc


Q3: What are top 3 values of total invoice?
-->
SELECT total FROM invoice
order by total desc
Limit 3


Q4: Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money Write a query that returns one city that has the highest sum of invoice totals. return both the city name & sum of all invoice totals?
-->
select SUM(total) as invoice_total, billing_city from invoice
group by billing city
order by invoice total desc


Q5: Who is the best customer? The customer who has spent the most money will be declared the best customer. Write a query that returns the person who has spent the most money?
-->
select customer.customer_id, customer.first_name, customer last name, SUM(invoice.total) as total from customer
JOIN invoice ON customer.customer_id = invoice.customer_id
GROUP BY customer.customer_id
ORDER BY total DESC
Limit 1


Q6: Write query to return the email, first name, last name, & Genre of all Rock Music listeners. Return your list ordered alphabetically by email starting with A?
-->
SELECT DISTINCT email, first_name, last_name
FROM customer
JOIN invoice ON customer.customer_id = invoice.customer_id
JOIN invoice_line ON invoice.invoice_id = invoice_line.invoice_id
WHERE track_id IN (
SELECT track_id FROM track
JOIN genre ON track.genre_id = genre.genre_id
WHERE genre.name LIKE 'Rock'
)
ORDER BY email;


Q7: Let's invite the artists who have written the most rock music in our dataset. Write a query that returns the Artist name and total track count of the top 10 rock bands?
-->
SELECT artist.artist_id, artist name, COUNT(artist.artist_id) AS number_of_songs FROM track
JOIN album ON album.album_id = track.album_id
JOIN artist ON artist.artist_id = album.artist_id
JOIN genre ON genre. genre_id = track, genre_id
WHERE genre.name LIKE 'Rock'
GROUP BY artist.artist_id
ORDER BY number_of_songs DESC
LIMIT 10;


Q8: Return all the track names that have a song length longer than the average song length. Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first?
-->
SELECT name, miliseconds
FROM track
WHERE miliseconds > (
SELECT AVG(milliseconds) AS avg_track_length FROM track)
ORDER BY miliseconds DESC:


Q9).Find how much amount spent by each customer on artists? Write a query to return customer name, artist name and total spent?
-->
WITH best selling artist AS ( SELECT artist.artist_id AS artist_id, artist.name AS artist_name, SUM(invoice line.unit_price*invoice_line.quantity) AS total_sales FROM invoice ine
JOIN track ON track.track_id = invoice_line.track_id
JOIN album ON album.album_id = track.album_id
JOIN artist ON artist.artist_id = album.artist_id
GROUP BY 1
ORDER BY 3 DESC
LIMIT 1
)

SELECT c.customer_id, c.first_name, c.last_name, bsa.artist_name, SUM(il.unit_price*il.quantity) AS amount_spent
FROM invoice i
JOIN customer c ON c.customer_id=i.customer_id
JOIN invoice line il ON il.invoice id = 1.invoice_id
JOIN track t ON t.track_id=il.track_id
JOIN album alb ON alb.album_id = t.album_id
JOIN best selling artist bsa ON bsa.artist_id = alb.artist_id
GROUP BY 1
ORDER BY 3 DESCR
LIMIT 1
)


Q2: We want to find out the most popular music Genre for each country We determine the most popular genre as the genre with the highest amount of purchases Write a query that returns each country along with the top Genre For countries where the maximum number of purchases is shared return all Genres.?
-->
WITH popular genre AS
(
SELECT COUNT(invoice_line.quantity) AS purchases, customer.country, genre.name, genre.genre_id, ROW NUMBER() OVER (PARTITION BY customer.country ORDER BY COUNT(invoice_line.quantity) DESC) AS RowNo FROM invoice_line

JOIN invoice ON invoice. invoice_id= invoice_line.invoice_id
JOIN customer ON customer.customer_id = invoice.customer_id
JOIN track ON track.thack_id = invoice_line.track_id
JOIN genre ON genre.genre_id = track.genre_id
GROUP BY 2,3,4
ORDER BY 2 ASC, 1 DESC
)
SELECT * FROM popular_genre WHERE RowNo <= 1